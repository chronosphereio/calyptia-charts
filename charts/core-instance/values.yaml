name: "core-instance"
clusterLogging: false
# If not set then we use the release name
coreInstance: ""
coreSecret: "core-instance"
cloudToken: ""
cloudUrl: "https://cloud-api.calyptia.com"
# Deprecated
# fromcloudImage: "ghcr.io/calyptia/core-operator/sync-from-cloud:v2.0.6"
# tocloudImage: "ghcr.io/calyptia/core-operator/sync-to-cloud:v2.0.6"
images:
  fromCloud:
    registry: ghcr.io
    repository: calyptia/core-operator/sync-from-cloud
    tag: 2.0.6
    pullSecrets: []
  toCloud:
    registry: ghcr.io
    repository: calyptia/core-operator/sync-to-cloud
    tag: 2.0.6
    pullSecrets: []
  hotReload:
    registry: ghcr.io
    repository: calyptia/configmap-reload
    tag: 0.11.1
    pullSecrets: []
notls: "true"
interval: "15s"
metricsPort: "15334"

commonAnnotations: {}
commonLabels: {}
podAnnotations: {}
podLabels: {}
nameOverride: ""
fullnameOverride: ""

fromCloud:
  resources: {}
toCloud:
  resources: {}

serviceAccount:
  create: true
  name: ""
  annotations: {}

#
## RBAC configuration
## @param rbac.create Specifies whether RBAC resources should be created
##
rbac:
  create: true
#
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
## @section Global parameters
## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  # Note that this overrides any specific ones below
  imageRegistry: ""
  # Add any custom pull secrets required
  imagePullSecrets:
    - regcreds
  storageClass: ""
  pullPolicy: IfNotPresent

#
## Define this to automatically set up image pull secrets
# imageCredentials:
#   secretName: regcreds
#   registry: ghcr.io
#   username: calyptia-ci
#   password: <TOKEN>
#   email: ci@calyptia.com
#
