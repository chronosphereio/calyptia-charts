### User-configurable section

calyptia:
  # Calyptia Project Token to use: see https://core.calyptia.com
  project_token: ""
  api_url: "https://cloud-api.calyptia.com/"
  port: 443
  tls: "on"
  tls_verify: "on"

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

podAnnotations:
  # Exclude our own logs
  fluentbit.io/exclude: "true"
  # Set up Prometheus scraping
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: prometheus

podLabels: {}

flush: 1
logLevel: info

httpPort: 2020
metricsPort: 2021

# https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
config:
  service: |
    [SERVICE]
        Daemon              Off
        Flush               {{ .Values.flush }}
        Log_Level           {{ .Values.logLevel }}
        Parsers_File        parsers.conf
        Parsers_File        custom_parsers.conf
        HTTP_Server         On
        HTTP_Listen         0.0.0.0
        HTTP_Port           {{ .Values.httpPort }}
        Health_Check        On
        storage.metrics     On

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
    [INPUT]
        Name                tail
        Path                /var/log/containers/*.log
        multiline.parser    docker, cri
        Tag                 logs.kube.*
        Mem_Buf_Limit       5MB
        Skip_Long_Lines     On

    [INPUT]
        Name                systemd
        Tag                 logs.node.*
        Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail      On

    [INPUT]
        name                fluentbit_metrics
        tag                 metrics.calyptia
        scrape_on_start     true
        scrape_interval     30

    [INPUT]
        name                node_exporter_metrics
        tag                 metrics.node
        scrape_interval     30

  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
    [FILTER]
        Name                kubernetes
        Match               logs.kube.*
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
    [OUTPUT]
        Name                stdout
        Match               logs.*

    [OUTPUT]
        name                prometheus_exporter
        match               metrics.*
        host                0.0.0.0
        port                {{ .Values.metricsPort }}
        add_label           node ${NODE_NAME}

  ## Only included if we have a project token
  calyptia: |
    [OUTPUT]
        Name                calyptia
        Match               *
        api_key             {{ required "A valid Calyptia project_token is required." .Values.calyptia.project_token }}
        calyptia_host       {{ .Values.calyptia.api_url }}
        calyptia_port       {{ .Values.calyptia.port }}
        calyptia_tls        {{ .Values.calyptia.tls }}
        calyptia_tls.verify {{ .Values.calyptia.tls_verify }}

  ## https://docs.fluentbit.io/manual/pipeline/parsers
  customParsers: |
    [PARSER]
        Name                docker_no_time
        Format              json
        Time_Keep           Off
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%L

  extraFiles: {}

luaScripts: {}

### End of user configuration

### System defaults
# Everything else is hardcoded for EKS add-ons.

managedBy: "EKS"

# Namespace configuration is currently not supported so specifying the same as the add-on for now.
namespace:
  create: false
  name: "calyptia-fluentbit"

# This must be created by default
serviceAccount:
  create: true
  name: calyptia-fluentbit
  # No annotations to be set by the add-on chart

# These are all part of the add-on definition
image:
  repository: 709825985650.dkr.ecr.us-east-1.amazonaws.com/calyptia/calyptia-fb
  tag: 22.10.5
  pullPolicy: Always

# Not intended to be configurable for add-ons
imagePullSecrets: []

# Recommended for add-ons
priorityClassName: system-node-critical

hostNetwork: false
dnsPolicy: ClusterFirst

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /api/v1/health
    port: http


## Ensure any UID matching is set up to allow access to files on the host
securityContext: {}

extraVolumes: []
extraVolumeMounts: []

existingConfigMap: ""

service:
  type: ClusterIP
  annotations: {}

rbac:
  create: true
  nodeAccess: false

annotations:
  app.kubernetes.io/managed-by: "EKS"

env:
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  - name: POD_SERVICE_ACCOUNT
    valueFrom:
      fieldRef:
        fieldPath: spec.serviceAccountName

# The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/fluent-bit.conf
    subPath: fluent-bit.conf
  - name: config
    mountPath: /fluent-bit/etc/custom_parsers.conf
    subPath: custom_parsers.conf

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log/
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log/
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true

updateStrategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 1

# Not configurable so disable for now
openShift:
  # Sets Openshift support
  enabled: false
