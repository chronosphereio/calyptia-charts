---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-controller-manager
  namespace: calyptia
---
# Source: calyptia-standalone/charts/fluent-bit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
---
# Source: calyptia-standalone/templates/cloud/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
  name: calyptia-cloud-standalone-calyptia-standalone-cloud
  namespace: "calyptia"
---
# Source: calyptia-standalone/templates/frontend/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
  name: calyptia-cloud-standalone-calyptia-standalone-frontend
  namespace: "calyptia"
---
# Source: calyptia-standalone/templates/reloader/service-account.yaml
# https://github.com/stakater/Reloader/blob/master/deployments/kubernetes/manifests/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
  name: calyptia-cloud-standalone-calyptia-standalone-reloader
  namespace: "calyptia"
---
# Source: calyptia-standalone/charts/fluent-bit/templates/configmap-luascripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: calyptia-cloud-standalone-fluent-bit-luascripts
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: calyptia-standalone/charts/fluent-bit/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
data:
  custom_parsers.conf: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
    
  fluent-bit.conf: |
    [SERVICE]
        Daemon              Off
        Flush               1
        Log_Level           info
        Parsers_File        /fluent-bit/etc/parsers.conf
        Parsers_File        /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server         On
        HTTP_Listen         0.0.0.0
        HTTP_Port           2020
        Health_Check        On
        Storage.Metrics     On
    
    [INPUT]
        Name                tail
        Path                /var/log/containers/*.log
        multiline.parser    docker, cri
        Tag                 kube.*
        Mem_Buf_Limit       5MB
        Skip_Long_Lines     On
        # Ensure we do not tail our own logs otherwise it can snowball even with exclusion later
        Exclude_Path        *fluent-bit*.log
        Path_Key            filename
    
    [INPUT]
        Name                systemd
        Tag                 host.*
        Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail      On
    
    [INPUT]
        name                fluentbit_metrics
        tag                 metrics.calyptia
        scrape_on_start     true
        scrape_interval     30
    
    [INPUT]
        name                node_exporter_metrics
        tag                 metrics.node
        scrape_interval     30
        # Ensure these are mounted
        path.procfs         /host/proc
        path.sysfs          /host/sys
    
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
    
    [OUTPUT]
        name                stdout
        match               *
    
    [OUTPUT]
        name                prometheus_exporter
        match               metrics.*
        host                0.0.0.0
        port                2021
        add_label           node ${NODE_NAME}
    
    # The following may not be present so we use configurable env vars to match
    [OUTPUT]
        name                forward
        host                vivo
        port                9000
        match               *
    
    [OUTPUT]
        name                loki
        match               *
        host                calyptia-cloud-loki
        auto_kubernetes_labels on
    
    [OUTPUT]
        name                prometheus_remote_write
        host                calyptia-cloud-prometheus-server
        match               *
        uri                 /api/v1/write
        add_label           job fluentbit
---
# Source: calyptia-standalone/charts/core-operator/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  labels:
    calyptia.core: core-operator
  name: pipelines.core.calyptia.com
spec:
  group: core.calyptia.com
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the pipeline
      jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Pipeline is the Schema for the pipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PipelineSpec defines the desired state of Pipeline
            properties:
              cloudResourceID:
                description: CloudResourceID represents the ID under which pipeline
                  exists in Cloud API
                type: string
              fluentbit:
                properties:
                  config:
                    type: string
                  files:
                    items:
                      properties:
                        content:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                  parsers:
                    type: string
                  secrets:
                    items:
                      properties:
                        key:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              image:
                default: ghcr.io/calyptia/core/calyptia-fluent-bit:23.8.5
                type: string
              kind:
                description: Enums
                type: string
              ports:
                items:
                  properties:
                    backendPort:
                      type: integer
                    cloudResourceID:
                      description: CloudResourceID represents the ID under which pipeline
                        port exists in Cloud API
                      type: string
                    frontendPort:
                      type: integer
                    port:
                      format: int32
                      type: integer
                    protocol:
                      type: string
                  type: object
                type: array
              replicasCount:
                default: 1
                format: int32
                type: integer
              resources:
                description: ResourceProfile model.
                properties:
                  limits:
                    properties:
                      cpu:
                        type: string
                      memory:
                        type: string
                    type: object
                  requests:
                    properties:
                      cpu:
                        type: string
                      memory:
                        type: string
                      storage:
                        properties:
                          backlog-mem-limit:
                            type: string
                          max-chunks-pause:
                            type: boolean
                          max-chunks-up:
                            type: integer
                          sync-full:
                            type: boolean
                          volume-size:
                            default: 256Mi
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - kind
            type: object
          status:
            description: PipelineStatus defines the observed state of Pipeline
            properties:
              daemonsetstatus:
                description: DaemonSetStatus represents the current status of a daemon
                  set.
                properties:
                  collisionCount:
                    description: Count of hash collisions for the DaemonSet. The DaemonSet
                      controller uses this field as a collision avoidance mechanism
                      when it needs to create the name for the newest ControllerRevision.
                    format: int32
                    type: integer
                  conditions:
                    description: Represents the latest available observations of a
                      DaemonSet's current state.
                    items:
                      description: DaemonSetCondition describes the state of a DaemonSet
                        at a certain point.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of DaemonSet condition.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  currentNumberScheduled:
                    description: 'The number of nodes that are running at least 1
                      daemon pod and are supposed to run the daemon pod. More info:
                      https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                    format: int32
                    type: integer
                  desiredNumberScheduled:
                    description: 'The total number of nodes that should be running
                      the daemon pod (including nodes correctly running the daemon
                      pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                    format: int32
                    type: integer
                  numberAvailable:
                    description: The number of nodes that should be running the daemon
                      pod and have one or more of the daemon pod running and available
                      (ready for at least spec.minReadySeconds)
                    format: int32
                    type: integer
                  numberMisscheduled:
                    description: 'The number of nodes that are running the daemon
                      pod, but are not supposed to run the daemon pod. More info:
                      https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/'
                    format: int32
                    type: integer
                  numberReady:
                    description: numberReady is the number of nodes that should be
                      running the daemon pod and have one or more of the daemon pod
                      running with a Ready Condition.
                    format: int32
                    type: integer
                  numberUnavailable:
                    description: The number of nodes that should be running the daemon
                      pod and have none of the daemon pod running and available (ready
                      for at least spec.minReadySeconds)
                    format: int32
                    type: integer
                  observedGeneration:
                    description: The most recent generation observed by the daemon
                      set controller.
                    format: int64
                    type: integer
                  updatedNumberScheduled:
                    description: The total number of nodes that are running updated
                      daemon pod
                    format: int32
                    type: integer
                required:
                - currentNumberScheduled
                - desiredNumberScheduled
                - numberMisscheduled
                - numberReady
                type: object
              deploymentstatus:
                description: DeploymentStatus is the most recently observed status
                  of the Deployment.
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least
                      minReadySeconds) targeted by this deployment.
                    format: int32
                    type: integer
                  collisionCount:
                    description: Count of hash collisions for the Deployment. The
                      Deployment controller uses this field as a collision avoidance
                      mechanism when it needs to create the name for the newest ReplicaSet.
                    format: int32
                    type: integer
                  conditions:
                    description: Represents the latest available observations of a
                      deployment's current state.
                    items:
                      description: DeploymentCondition describes the state of a deployment
                        at a certain point.
                      properties:
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: The last time this condition was updated.
                          format: date-time
                          type: string
                        message:
                          description: A human readable message indicating details
                            about the transition.
                          type: string
                        reason:
                          description: The reason for the condition's last transition.
                          type: string
                        status:
                          description: Status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of deployment condition.
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  observedGeneration:
                    description: The generation observed by the deployment controller.
                    format: int64
                    type: integer
                  readyReplicas:
                    description: readyReplicas is the number of pods targeted by this
                      Deployment with a Ready Condition.
                    format: int32
                    type: integer
                  replicas:
                    description: Total number of non-terminated pods targeted by this
                      deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this
                      deployment. This is the total number of pods that are still
                      required for the deployment to have 100% available capacity.
                      They may either be pods that are running but not yet available
                      or pods that still have not been created.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this
                      deployment that have the desired template spec.
                    format: int32
                    type: integer
                type: object
              servicestatuses:
                additionalProperties:
                  description: ServiceStatus represents the current status of a service.
                  properties:
                    conditions:
                      description: Current service state
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, \n type FooStatus struct{
                          // Represents the observations of a foo's current state.
                          // Known .status.conditions.type are: \"Available\", \"Progressing\",
                          and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                          // +listType=map // +listMapKey=type Conditions []metav1.Condition
                          `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                          protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields
                          }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    loadBalancer:
                      description: LoadBalancer contains the current status of the
                        load-balancer, if one is present.
                      properties:
                        ingress:
                          description: Ingress is a list containing ingress points
                            for the load-balancer. Traffic intended for the service
                            should be sent to these ingress points.
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                      type: object
                  type: object
                type: object
              status:
                description: PipelineStatusKind enum.
                type: string
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    calyptia.core: core-operator
  name: calyptia-core-manager-role
rules:
- apiGroups:
  - ""
  - apps
  - batch
  - policy
  - core.calyptia.com
  - core
  - rbac.authorization.k8s.io
  resources:
  - namespaces
  - serviceaccounts
  - deployments
  - clusterrolebindings
  - daemonsets
  - replicasets
  - pods
  - services
  - configmaps
  - deployments/scale
  - secrets
  - nodes/proxy
  - nodes
  - jobs
  - podsecuritypolicies
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
  - watch
  - deletecollection
  - use
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    calyptia.core: core-operator
  name: calyptia-core-pod-role
rules:
- apiGroups:
  - ""
  - apps
  - batch
  - policy
  - core.calyptia.com
  resources:
  - namespaces
  - deployments
  - daemonsets
  - replicasets
  - pods
  - services
  - configmaps
  - deployments/scale
  - secrets
  - nodes/proxy
  - nodes
  - jobs
  - podsecuritypolicies
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
  - watch
  - deletecollection
  - use
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: calyptia-standalone/charts/fluent-bit/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-core-manager-role
subjects:
- kind: ServiceAccount
  name: calyptia-core-controller-manager
  namespace: calyptia
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-core-proxy-role
subjects:
- kind: ServiceAccount
  name: calyptia-core-controller-manager
  namespace: calyptia
---
# Source: calyptia-standalone/charts/fluent-bit/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-cloud-standalone-fluent-bit
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-fluent-bit
    namespace: calyptia
---
# Source: calyptia-standalone/templates/cloud/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: calyptia-write-role
  namespace: "calyptia"
rules:
  - apiGroups: [""] # core API group
    resources: ["pods", "secrets"]
    verbs: ["get", "watch", "list", "create", "update", "delete"]
---
# Source: calyptia-standalone/templates/frontend/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: calyptia-read-role
  namespace: "calyptia"
rules:
  - apiGroups: [""] # core API group
    resources: ["pods", "secrets"]
    verbs: ["get", "watch", "list"]
---
# Source: calyptia-standalone/templates/reloader/rbac.yaml
# https://github.com/stakater/Reloader/blob/master/deployments/kubernetes/manifests/clusterrole.yaml
# https://github.com/stakater/Reloader/blob/master/deployments/kubernetes/manifests/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: reloader-reloader-role
  namespace: "calyptia"
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: calyptia-standalone/templates/cloud/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: calyptia-write-binding
  namespace: "calyptia"
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-calyptia-standalone-cloud
    namespace: "calyptia"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: calyptia-write-role
---
# Source: calyptia-standalone/templates/frontend/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: calyptia-read-binding
  namespace: "calyptia"
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-calyptia-standalone-frontend
    namespace: "calyptia"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: calyptia-read-role
---
# Source: calyptia-standalone/templates/reloader/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: reloader-reloader-role-binding
  namespace: "calyptia"
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-calyptia-standalone-reloader
    namespace: "calyptia"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: reloader-reloader-role
---
# Source: calyptia-standalone/charts/core-operator/templates/rbac.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
    control-plane: controller-manager
  name: calyptia-core-controller-manager-metrics-service
  namespace: calyptia
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    calyptia.core: core-operator
    control-plane: controller-manager
---
# Source: calyptia-standalone/charts/fluent-bit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: http
      protocol: TCP
      name: http
    - name: metrics
      targetPort: metrics
      protocol: TCP
      port: 2021
  selector:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
---
# Source: calyptia-standalone/templates/cloud/service-cloud.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-api
  name: cloud-api
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: "cloud-api"
      port: 5000
      targetPort: 5000
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-api
---
# Source: calyptia-standalone/templates/cloud/service-influxdb.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
  name: influxdb
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: influxdb
      port: 8086
      targetPort: 8086
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
---
# Source: calyptia-standalone/templates/cloud/service-postgres.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/name: cloud
    app.kubernetes.io/instance: calyptia
  labels:
    app.kubernetes.io/component: postgres
  name: postgres
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: postgres
---
# Source: calyptia-standalone/templates/frontend/service-core-ui.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  name: core
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: ui
      port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
---
# Source: calyptia-standalone/templates/frontend/service-luasandbox.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-lua-sandbox
  name: cloud-lua-sandbox
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: cloud-lua-sandbox
      port: 5555
      targetPort: 5555
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-lua-sandbox
---
# Source: calyptia-standalone/templates/vivo/service-vivo.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vivo
    calyptia.vivo.input.http: '9010'
    calyptia.vivo.input.forward: '9000'
  name: vivo
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: "ui"
      port: 3000
      targetPort: 3000
    - name: "forward"
      port: 9000
      targetPort: 24224
    - name: "http"
      port: 9010
      targetPort: 9880
    - name: "vivo"
      port: 2025
      targetPort: 2025
    - name: "fluent-bit"
      port: 2020
      targetPort: 2020
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vivo
---
# Source: calyptia-standalone/charts/fluent-bit/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: calyptia-cloud-standalone-fluent-bit
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluent-bit
      app.kubernetes.io/instance: calyptia-cloud-standalone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/instance: calyptia-cloud-standalone
      annotations:
        fluentbit.io/exclude: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "2021"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: calyptia-cloud-standalone-fluent-bit
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - name: fluent-bit
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          image: "ghcr.io/calyptia/calyptia-fluent-bit:23.4.5"
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - --workdir=/fluent-bit/etc
            - --config=/fluent-bit/etc/conf/fluent-bit.conf
            - --enable-hot-reload
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
            - name: metrics
              containerPort: 2021
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc/conf
            - name: luascripts
              mountPath: /fluent-bit/scripts
            - mountPath: /var/log/
              name: varlog
              readOnly: true
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /etc/machine-id
              name: etcmachineid
              readOnly: true
            - mountPath: /host/proc
              name: hostproc
              readOnly: true
            - mountPath: /host/sys
              name: hostsys
              readOnly: true
        - name: reloader
          image: ghcr.io/jimmidyson/configmap-reload:v0.11.1
          args:
            - -webhook-url=http://localhost:2020/api/v2/reload
            - -volume-dir=/watch/config
            - -volume-dir=/watch/scripts
          volumeMounts:
            - name: config
              mountPath: /watch/config
            - name: luascripts
              mountPath: /watch/scripts
      volumes:
        - name: config
          configMap:
            name: calyptia-cloud-standalone-fluent-bit
        - name: luascripts
          configMap:
            name: calyptia-cloud-standalone-fluent-bit-luascripts
        - hostPath:
            path: /var/log/
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - hostPath:
            path: /etc/machine-id
            type: File
          name: etcmachineid
        - hostPath:
            path: /proc
          name: hostproc
        - hostPath:
            path: /sys
          name: hostsys
---
# Source: calyptia-standalone/charts/core-operator/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
    calyptia.core.version: v1.0.15
    control-plane: controller-manager
  name: calyptia-core-controller-manager
  namespace: calyptia
spec:
  replicas: 1
  selector:
    matchLabels:
      calyptia.core: core-operator
      calyptia.core.version: v1.0.15
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        calyptia.core: core-operator
        calyptia.core.version: v1.0.15
        control-plane: controller-manager
    spec:
      containers:
        - command:
            - /manager
          image: ghcr.io/calyptia/core-operator:v1.0.15
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: calyptia-core-controller-manager
      terminationGracePeriodSeconds: 10
---
# Source: calyptia-standalone/templates/cloud/deployment-cloud.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/default-container: cloud-api
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-api
  name: cloud-api
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: cloud-api
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: cloud-api
    spec:
      serviceAccount: calyptia-cloud-standalone-calyptia-standalone-cloud
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: ghcr.io/calyptia/cloud:1.4.8
          imagePullPolicy: "IfNotPresent"
          name: cloud-api
          ports:
            - name: http
              containerPort: 5000
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          env:
            - name: DEBUG
              value: 'true'
            - name: INFLUX_SERVER
              value: "http://influxdb:8086"
            - name: POSTGRES_DSN
              value: "postgresql://postgres@postgres:5432?sslmode=disable"
            # - name: ALLOWED_ORIGINS
            #   # value: "https://config-viewer-ui-dev.herokuapp.com,https://visual-ui.herokuapp.com,https://cloud-api.calyptia.com,https://core-jet.vercel.app,https://core-git-*-calyptia.vercel.app"
            #   value: "*"
            # Cross-mount a token file
            - name: DEFAULT_TOKEN_FILE
              value: /token/token.txt
          volumeMounts:
            - mountPath: /token
              name: token
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /
              port: http
            periodSeconds: 60
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            periodSeconds: 60
        - name: token-secret-creator
          image: docker.io/bitnami/kubectl:1.25.12
          imagePullPolicy: "IfNotPresent"
          # Need access to the filesystem - cloud runs as root
          securityContext:
            runAsUser: 0
          resources:
            limits: {}
            requests: {}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              if kubectl delete -n ${CORE_NAMESPACE} secret auth-secret ; then
                echo 'Deleted existing token'
              fi
              until [[ -f /token/token.txt ]]; do
                sleep 5
              done
              echo 'Token file found'
              until kubectl create -n ${CORE_NAMESPACE} secret generic auth-secret --from-file=ONPREM_CLOUD_API_PROJECT_TOKEN=/token/token.txt ; do
                sleep 5
              done
              echo 'Secret created - complete'
              while true; do
                sleep 5
              done
          env:
            - name: CORE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: token
              mountPath: /token
      volumes:
        - name: token
          emptyDir:
            sizeLimit: 1Mi
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/cloud/deployment-influxdb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
  name: influxdb
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: influxdb
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: influxdb
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              value: my-password
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: my-user
          image: docker.io/influxdb:2.7.1
          imagePullPolicy: "IfNotPresent"
          name: influxdb
          ports:
            - containerPort: 8086
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/cloud/deployment-postgres.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: postgres
  name: postgres
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: postgres
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: postgres
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          image: docker.io/postgres:15.3
          imagePullPolicy: "IfNotPresent"
          name: postgres
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/frontend/deployment-core-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: core
  name: core
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: core
    spec:
      serviceAccount: calyptia-cloud-standalone-calyptia-standalone-frontend
      
      imagePullSecrets:
        - name: regcreds
      initContainers:
        # Wait for the auth-secret to be created before continuing
        - name: token-secret-waiter
          image: docker.io/bitnami/kubectl:1.25.12
          imagePullPolicy: "IfNotPresent"
          resources:
            limits: {}
            requests: {}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              until kubectl get secret -n ${CORE_NAMESPACE} auth-secret; do
                sleep 30
              done
          env:
            - name: CORE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - image: ghcr.io/calyptia/frontend:1.0.4
          imagePullPolicy: "IfNotPresent"
          name: core
          ports:
            - name: http
              containerPort: 3000
          env:
            # The in-cluster 'cloud' service
            - name: CLOUD_API_URL
              value: http://cloud-api:5000
            - name: NEXT_PUBLIC_CLI_INSTRUCTIONS_URL_OVERRIDE
              value: http://cloud-api:5000
              # The in-cluster LUA sandbox service
            - name: LUA_SANDBOX_URL
              value: http://cloud-lua-sandbox:5555/jsonrpc
            # Disable various components we do not want - the container should anyway.
            - name: SENTRY_IGNORE_API_RESOLUTION_ERROR
              value: '1'
            - name: SENTRY_ENVIRONMENT
              value: 'offline'
            - name: SENTRY_DISABLED
              value: '1'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
          envFrom:
            - secretRef:
                name: auth-secret
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /
              port: http
            periodSeconds: 60
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            periodSeconds: 60
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/frontend/deployment-luasandbox.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cloud-lua-sandbox
  name: cloud-lua-sandbox
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: cloud-lua-sandbox
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: cloud-lua-sandbox
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: ghcr.io/calyptia/cloud-lua-sandbox:2.1.7
          name: cloud-lua-sandbox
          ports:
            - name: http
              containerPort: 5555
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          imagePullPolicy: "IfNotPresent"
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/reloader/deployment-reloader.yaml
# https://github.com/stakater/Reloader/blob/master/deployments/kubernetes/manifests/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: http
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: reloader
  name: reloader
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: reloader
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: reloader
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: ghcr.io/stakater/reloader:v1.0.40
          name: reloader
          ports:
            - name: http
              containerPort: 9090
          resources:
            limits: {}
            requests: {}
          imagePullPolicy: "IfNotPresent"
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
          - "--reload-on-create=true"
          - "--sync-after-restart=true"
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: calyptia-cloud-standalone-calyptia-standalone-reloader
---
# Source: calyptia-standalone/templates/vivo/deployment-vivo.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-0.1.8
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: vivo
  name: vivo
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: vivo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-0.1.8
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: vivo
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: docker.io/calyptia/vivo:3.0.1
          name: vivo
          ports:
            - name: forward
              containerPort: 24224
            - name: http
              containerPort: 9880
            - name: vivo
              containerPort: 2025
            - name: fluent-bit
              containerPort: 2020
            - name: ui
              containerPort: 3000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: fluent-bit
            periodSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/v1/health
              port: fluent-bit
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
          imagePullPolicy: "IfNotPresent"
      restartPolicy: Always
---
# Source: calyptia-standalone/charts/fluent-bit/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "calyptia-cloud-standalone-fluent-bit-test-connection"
  namespace: calyptia
  labels:
    helm.sh/chart: fluent-bit-0.38.0
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.1.9"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: "busybox:latest"
      imagePullPolicy: Always
      command: ['wget']
      args: ['calyptia-cloud-standalone-fluent-bit:2020']
  restartPolicy: Never
