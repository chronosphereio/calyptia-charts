{{- if .Values.enabled }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  labels:
    calyptia.core: core-operator
  name: pipelines.core.calyptia.com
spec:
  group: core.calyptia.com
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Status of the pipeline
          jsonPath: .status.status
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Pipeline is the Schema for the pipelines API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PipelineSpec defines the desired state of Pipeline
              properties:
                cloudResourceID:
                  description: CloudResourceID represents the ID under which pipeline exists in Cloud API
                  type: string
                envVar:
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: |-
                          Variable references $(VAR_NAME) are expanded
                          using the previously defined environment variables in the container and
                          any service environment variables. If a variable cannot be resolved,
                          the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of whether the variable
                          exists or not.
                          Defaults to "".
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                          fieldRef:
                            description: |-
                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceFieldRef:
                            description: |-
                              Selects a resource of the container: only resources limits and requests
                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                fluentbit:
                  properties:
                    config:
                      type: string
                    files:
                      items:
                        properties:
                          content:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                    parsers:
                      type: string
                    secrets:
                      items:
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                hotReload:
                  type: boolean
                hotReloadImage:
                  default: '{{ template "hotReload.image" . }}'
                  type: string
                hpa:
                  description: HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
                  properties:
                    behavior:
                      description: |-
                        behavior configures the scaling behavior of the target
                        in both Up and Down directions (scaleUp and scaleDown fields respectively).
                        If not set, the default HPAScalingRules for scale up and scale down are used.
                      properties:
                        scaleDown:
                          description: |-
                            scaleDown is scaling policy for scaling Down.
                            If not set, the default value is to allow to scale down to minReplicas pods, with a
                            300 second stabilization window (i.e., the highest recommendation for
                            the last 300sec is used).
                          properties:
                            policies:
                              description: |-
                                policies is a list of potential scaling polices which can be used during scaling.
                                At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                              items:
                                description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                                properties:
                                  periodSeconds:
                                    description: |-
                                      periodSeconds specifies the window of time for which the policy should hold true.
                                      PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                    format: int32
                                    type: integer
                                  type:
                                    description: type is used to specify the scaling policy.
                                    type: string
                                  value:
                                    description: |-
                                      value contains the amount of change which is permitted by the policy.
                                      It must be greater than zero
                                    format: int32
                                    type: integer
                                required:
                                  - periodSeconds
                                  - type
                                  - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            selectPolicy:
                              description: |-
                                selectPolicy is used to specify which policy should be used.
                                If not set, the default value Max is used.
                              type: string
                            stabilizationWindowSeconds:
                              description: |-
                                stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                considered while scaling up or scaling down.
                                StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                If not set, use the default values:
                                - For scale up: 0 (i.e. no stabilization is done).
                                - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                              format: int32
                              type: integer
                          type: object
                        scaleUp:
                          description: |-
                            scaleUp is scaling policy for scaling Up.
                            If not set, the default value is the higher of:
                              * increase no more than 4 pods per 60 seconds
                              * double the number of pods per 60 seconds
                            No stabilization is used.
                          properties:
                            policies:
                              description: |-
                                policies is a list of potential scaling polices which can be used during scaling.
                                At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
                              items:
                                description: HPAScalingPolicy is a single policy which must hold true for a specified past interval.
                                properties:
                                  periodSeconds:
                                    description: |-
                                      periodSeconds specifies the window of time for which the policy should hold true.
                                      PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
                                    format: int32
                                    type: integer
                                  type:
                                    description: type is used to specify the scaling policy.
                                    type: string
                                  value:
                                    description: |-
                                      value contains the amount of change which is permitted by the policy.
                                      It must be greater than zero
                                    format: int32
                                    type: integer
                                required:
                                  - periodSeconds
                                  - type
                                  - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            selectPolicy:
                              description: |-
                                selectPolicy is used to specify which policy should be used.
                                If not set, the default value Max is used.
                              type: string
                            stabilizationWindowSeconds:
                              description: |-
                                stabilizationWindowSeconds is the number of seconds for which past recommendations should be
                                considered while scaling up or scaling down.
                                StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
                                If not set, use the default values:
                                - For scale up: 0 (i.e. no stabilization is done).
                                - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
                              format: int32
                              type: integer
                          type: object
                      type: object
                    maxReplicas:
                      description: |-
                        maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up.
                        It cannot be less that minReplicas.
                      format: int32
                      type: integer
                    metrics:
                      description: |-
                        metrics contains the specifications for which to use to calculate the
                        desired replica count (the maximum replica count across all metrics will
                        be used).  The desired replica count is calculated multiplying the
                        ratio between the target value and the current value by the current
                        number of pods.  Ergo, metrics used must decrease as the pod count is
                        increased, and vice-versa.  See the individual metric source types for
                        more information about how each type of metric must respond.
                        If not set, the default metric will be set to 80% average CPU utilization.
                      items:
                        description: |-
                          MetricSpec specifies how to scale based on a single metric
                          (only `type` and one other matching field should be set at once).
                        properties:
                          containerResource:
                            description: |-
                              containerResource refers to a resource metric (such as those specified in
                              requests and limits) known to Kubernetes describing a single container in
                              each pod of the current scale target (e.g. CPU or memory). Such metrics are
                              built in to Kubernetes, and have special scaling options on top of those
                              available to normal per-pod metrics using the "pods" source.
                              This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
                            properties:
                              container:
                                description: container is the name of the container in the pods of the scaling target
                                type: string
                              name:
                                description: name is the name of the resource in question.
                                type: string
                              target:
                                description: target specifies the target value for the given metric
                                properties:
                                  averageUtilization:
                                    description: |-
                                      averageUtilization is the target value of the average of the
                                      resource metric across all relevant pods, represented as a percentage of
                                      the requested value of the resource for the pods.
                                      Currently only valid for Resource metric source type
                                    format: int32
                                    type: integer
                                  averageValue:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      averageValue is the target value of the average of the
                                      metric across all relevant pods (as a quantity)
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  type:
                                    description: type represents whether the metric type is Utilization, Value, or AverageValue
                                    type: string
                                  value:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: value is the target value of the metric (as a quantity).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                required:
                                  - type
                                type: object
                            required:
                              - container
                              - name
                              - target
                            type: object
                          external:
                            description: |-
                              external refers to a global metric that is not associated
                              with any Kubernetes object. It allows autoscaling based on information
                              coming from components running outside of cluster
                              (for example length of queue in cloud messaging service, or
                              QPS from loadbalancer running outside of cluster).
                            properties:
                              metric:
                                description: metric identifies the target metric by name and selector
                                properties:
                                  name:
                                    description: name is the name of the given metric
                                    type: string
                                  selector:
                                    description: |-
                                      selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                      When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                      When unset, just the metricName will be used to gather metrics.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - name
                                type: object
                              target:
                                description: target specifies the target value for the given metric
                                properties:
                                  averageUtilization:
                                    description: |-
                                      averageUtilization is the target value of the average of the
                                      resource metric across all relevant pods, represented as a percentage of
                                      the requested value of the resource for the pods.
                                      Currently only valid for Resource metric source type
                                    format: int32
                                    type: integer
                                  averageValue:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      averageValue is the target value of the average of the
                                      metric across all relevant pods (as a quantity)
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  type:
                                    description: type represents whether the metric type is Utilization, Value, or AverageValue
                                    type: string
                                  value:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: value is the target value of the metric (as a quantity).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                required:
                                  - type
                                type: object
                            required:
                              - metric
                              - target
                            type: object
                          object:
                            description: |-
                              object refers to a metric describing a single kubernetes object
                              (for example, hits-per-second on an Ingress object).
                            properties:
                              describedObject:
                                description: describedObject specifies the descriptions of a object,such as kind,name apiVersion
                                properties:
                                  apiVersion:
                                    description: apiVersion is the API version of the referent
                                    type: string
                                  kind:
                                    description: 'kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              metric:
                                description: metric identifies the target metric by name and selector
                                properties:
                                  name:
                                    description: name is the name of the given metric
                                    type: string
                                  selector:
                                    description: |-
                                      selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                      When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                      When unset, just the metricName will be used to gather metrics.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - name
                                type: object
                              target:
                                description: target specifies the target value for the given metric
                                properties:
                                  averageUtilization:
                                    description: |-
                                      averageUtilization is the target value of the average of the
                                      resource metric across all relevant pods, represented as a percentage of
                                      the requested value of the resource for the pods.
                                      Currently only valid for Resource metric source type
                                    format: int32
                                    type: integer
                                  averageValue:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      averageValue is the target value of the average of the
                                      metric across all relevant pods (as a quantity)
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  type:
                                    description: type represents whether the metric type is Utilization, Value, or AverageValue
                                    type: string
                                  value:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: value is the target value of the metric (as a quantity).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                required:
                                  - type
                                type: object
                            required:
                              - describedObject
                              - metric
                              - target
                            type: object
                          pods:
                            description: |-
                              pods refers to a metric describing each pod in the current scale target
                              (for example, transactions-processed-per-second).  The values will be
                              averaged together before being compared to the target value.
                            properties:
                              metric:
                                description: metric identifies the target metric by name and selector
                                properties:
                                  name:
                                    description: name is the name of the given metric
                                    type: string
                                  selector:
                                    description: |-
                                      selector is the string-encoded form of a standard kubernetes label selector for the given metric
                                      When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping.
                                      When unset, just the metricName will be used to gather metrics.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - name
                                type: object
                              target:
                                description: target specifies the target value for the given metric
                                properties:
                                  averageUtilization:
                                    description: |-
                                      averageUtilization is the target value of the average of the
                                      resource metric across all relevant pods, represented as a percentage of
                                      the requested value of the resource for the pods.
                                      Currently only valid for Resource metric source type
                                    format: int32
                                    type: integer
                                  averageValue:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      averageValue is the target value of the average of the
                                      metric across all relevant pods (as a quantity)
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  type:
                                    description: type represents whether the metric type is Utilization, Value, or AverageValue
                                    type: string
                                  value:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: value is the target value of the metric (as a quantity).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                required:
                                  - type
                                type: object
                            required:
                              - metric
                              - target
                            type: object
                          resource:
                            description: |-
                              resource refers to a resource metric (such as those specified in
                              requests and limits) known to Kubernetes describing each pod in the
                              current scale target (e.g. CPU or memory). Such metrics are built in to
                              Kubernetes, and have special scaling options on top of those available
                              to normal per-pod metrics using the "pods" source.
                            properties:
                              name:
                                description: name is the name of the resource in question.
                                type: string
                              target:
                                description: target specifies the target value for the given metric
                                properties:
                                  averageUtilization:
                                    description: |-
                                      averageUtilization is the target value of the average of the
                                      resource metric across all relevant pods, represented as a percentage of
                                      the requested value of the resource for the pods.
                                      Currently only valid for Resource metric source type
                                    format: int32
                                    type: integer
                                  averageValue:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      averageValue is the target value of the average of the
                                      metric across all relevant pods (as a quantity)
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  type:
                                    description: type represents whether the metric type is Utilization, Value, or AverageValue
                                    type: string
                                  value:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: value is the target value of the metric (as a quantity).
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                required:
                                  - type
                                type: object
                            required:
                              - name
                              - target
                            type: object
                          type:
                            description: |-
                              type is the type of metric source.  It should be one of "ContainerResource", "External",
                              "Object", "Pods" or "Resource", each mapping to a matching field in the object.
                              Note: "ContainerResource" type is available on when the feature-gate
                              HPAContainerMetrics is enabled
                            type: string
                        required:
                          - type
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    minReplicas:
                      description: |-
                        minReplicas is the lower limit for the number of replicas to which the autoscaler
                        can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the
                        alpha feature gate HPAScaleToZero is enabled and at least one Object or External
                        metric is configured.  Scaling is active as long as at least one metric value is
                        available.
                      format: int32
                      type: integer
                    scaleTargetRef:
                      description: |-
                        scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics
                        should be collected, as well as to actually change the replica count.
                      properties:
                        apiVersion:
                          description: apiVersion is the API version of the referent
                          type: string
                        kind:
                          description: 'kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      required:
                        - kind
                        - name
                      type: object
                  required:
                    - maxReplicas
                    - scaleTargetRef
                  type: object
                image:
                  default: '{{ template "fluentBit.image" . }}'
                  type: string
                kind:
                  description: Enums
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  type: object
                ports:
                  items:
                    properties:
                      backendPort:
                        type: integer
                      cloudResourceID:
                        description: CloudResourceID represents the ID under which pipeline port exists in Cloud API
                        type: string
                      frontendPort:
                        type: integer
                      port:
                        format: int32
                        type: integer
                      protocol:
                        type: string
                      serviceType:
                        default: '{{ include "validateServiceType" . }}'
                        description: Service Type string describes ingress methods for a service
                        type: string
                    type: object
                  type: array
                replicasCount:
                  format: int32
                  type: integer
                resources:
                  description: ResourceProfile model.
                  properties:
                    limits:
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      type: object
                    requests:
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                        storage:
                          properties:
                            backlog-mem-limit:
                              type: string
                            max-chunks-pause:
                              type: boolean
                            max-chunks-up:
                              type: integer
                            sync-full:
                              type: boolean
                            volume-size:
                              default: 256Mi
                              type: string
                          type: object
                      type: object
                  type: object
                sidecars:
                  description: Sidecars allows specifying additional containers to run alongside the main container
                  items:
                    description: SidecarContainer represents a simplified container specification for sidecars
                    properties:
                      args:
                        description: Arguments to the command
                        items:
                          type: string
                        type: array
                      command:
                        description: Command to run in the container
                        items:
                          type: string
                        type: array
                      env:
                        description: Environment variables for the sidecar
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      image:
                        description: Docker image for the sidecar
                        type: string
                      imagePullPolicy:
                        default: IfNotPresent
                        description: Optional image pull policy
                        type: string
                      livenessProbe:
                        description: Probe configurations for the sidecar
                        properties:
                          exec:
                            description: |-
                              One and only one of the following should be specified.
                              Exec specifies the action to take using a command
                            properties:
                              command:
                                description: Command is the command line to execute inside the container
                                items:
                                  type: string
                                type: array
                            required:
                              - command
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies a gRPC check against a port
                            properties:
                              port:
                                description: Port number of the gRPC service
                                format: int32
                                type: integer
                              service:
                                description: Service is the name of the service to place in the gRPC HealthCheckRequest
                                type: string
                            required:
                              - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server
                                type: string
                              port:
                                description: Port number of the HTTP service
                                format: int32
                                type: integer
                              scheme:
                                description: Scheme to use for connecting to the host
                                type: string
                            required:
                              - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the container has started before probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies a TCP check against a port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              port:
                                description: Port number to probe
                                format: int32
                                type: integer
                            required:
                              - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: Number of seconds after which the probe times out.
                            format: int32
                            type: integer
                        type: object
                      name:
                        description: Name of the sidecar container
                        type: string
                      ports:
                        description: Ports to expose from the container
                        items:
                          description: SidecarPort represents a simplified port specification for sidecars
                          properties:
                            containerPort:
                              description: Container port to expose
                              format: int32
                              type: integer
                            name:
                              description: Name of the port
                              type: string
                            protocol:
                              default: TCP
                              description: Protocol for port (TCP/UDP)
                              type: string
                          required:
                            - containerPort
                          type: object
                        type: array
                      readinessProbe:
                        description: Probe describes a health check to be performed to determine whether it is alive or ready to receive traffic
                        properties:
                          exec:
                            description: |-
                              One and only one of the following should be specified.
                              Exec specifies the action to take using a command
                            properties:
                              command:
                                description: Command is the command line to execute inside the container
                                items:
                                  type: string
                                type: array
                            required:
                              - command
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies a gRPC check against a port
                            properties:
                              port:
                                description: Port number of the gRPC service
                                format: int32
                                type: integer
                              service:
                                description: Service is the name of the service to place in the gRPC HealthCheckRequest
                                type: string
                            required:
                              - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server
                                type: string
                              port:
                                description: Port number of the HTTP service
                                format: int32
                                type: integer
                              scheme:
                                description: Scheme to use for connecting to the host
                                type: string
                            required:
                              - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the container has started before probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies a TCP check against a port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              port:
                                description: Port number to probe
                                format: int32
                                type: integer
                            required:
                              - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: Number of seconds after which the probe times out.
                            format: int32
                            type: integer
                        type: object
                      resources:
                        description: Resource requirements
                        properties:
                          limits:
                            properties:
                              cpu:
                                type: string
                              memory:
                                type: string
                            type: object
                          requests:
                            properties:
                              cpu:
                                type: string
                              memory:
                                type: string
                              storage:
                                properties:
                                  backlog-mem-limit:
                                    type: string
                                  max-chunks-pause:
                                    type: boolean
                                  max-chunks-up:
                                    type: integer
                                  sync-full:
                                    type: boolean
                                  volume-size:
                                    default: 256Mi
                                    type: string
                                type: object
                            type: object
                        type: object
                      startupProbe:
                        description: Probe describes a health check to be performed to determine whether it is alive or ready to receive traffic
                        properties:
                          exec:
                            description: |-
                              One and only one of the following should be specified.
                              Exec specifies the action to take using a command
                            properties:
                              command:
                                description: Command is the command line to execute inside the container
                                items:
                                  type: string
                                type: array
                            required:
                              - command
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies a gRPC check against a port
                            properties:
                              port:
                                description: Port number of the gRPC service
                                format: int32
                                type: integer
                              service:
                                description: Service is the name of the service to place in the gRPC HealthCheckRequest
                                type: string
                            required:
                              - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server
                                type: string
                              port:
                                description: Port number of the HTTP service
                                format: int32
                                type: integer
                              scheme:
                                description: Scheme to use for connecting to the host
                                type: string
                            required:
                              - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the container has started before probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies a TCP check against a port
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP
                                type: string
                              port:
                                description: Port number to probe
                                format: int32
                                type: integer
                            required:
                              - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: Number of seconds after which the probe times out.
                            format: int32
                            type: integer
                        type: object
                      volumeMounts:
                        description: Volume mounts for the sidecar
                        items:
                          description: SidecarVolumeMount represents a simplified volume mount for sidecars
                          properties:
                            mountPath:
                              description: Path where the volume should be mounted in the container
                              type: string
                            name:
                              description: Name of the volume to mount
                              type: string
                            readOnly:
                              description: Whether the volume is read-only
                              type: boolean
                            subPath:
                              description: Optional subdirectory to mount from the volume
                              type: string
                          required:
                            - mountPath
                            - name
                          type: object
                        type: array
                      volumes:
                        description: Volumes specific to this sidecar
                        items:
                          description: SidecarVolume represents volume configuration for sidecars
                          properties:
                            configMap:
                              description: ConfigMap volume source
                              properties:
                                defaultMode:
                                  description: 'Optional: mode bits to use on created files by default'
                                  format: int32
                                  type: integer
                                items:
                                  description: Items to project from the ConfigMap
                                  items:
                                    description: SidecarKeyToPath defines how to map a ConfigMap key to a path
                                    properties:
                                      key:
                                        description: Key in the ConfigMap
                                        type: string
                                      mode:
                                        description: 'Optional: mode bits to use on this file'
                                        format: int32
                                        type: integer
                                      path:
                                        description: Path where the key will be projected
                                        type: string
                                    required:
                                      - key
                                      - path
                                    type: object
                                  type: array
                                name:
                                  description: Name of the ConfigMap
                                  type: string
                                optional:
                                  description: 'Optional: specify whether the ConfigMap must be defined'
                                  type: boolean
                              required:
                                - name
                              type: object
                            name:
                              description: Name of the volume
                              type: string
                          required:
                            - name
                          type: object
                        type: array
                    required:
                      - image
                      - name
                    type: object
                  type: array
                tolerations:
                  items:
                    description: |-
                      The pod this Toleration is attached to tolerates any taint that matches
                      the triple <key,value,effect> using the matching operator <operator>.
                    properties:
                      effect:
                        description: |-
                          Effect indicates the taint effect to match. Empty means match all taint effects.
                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: |-
                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: |-
                          Operator represents a key's relationship to the value.
                          Valid operators are Exists and Equal. Defaults to Equal.
                          Exists is equivalent to wildcard for value, so that a pod can
                          tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: |-
                          TolerationSeconds represents the period of time the toleration (which must be
                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                          negative values will be treated as 0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          Value is the taint value the toleration matches to.
                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
                    type: object
                  type: array
              required:
                - kind
                - replicasCount
              type: object
            status:
              description: PipelineStatus defines the observed state of Pipeline
              properties:
                daemonsetstatus:
                  description: DaemonSetStatus represents the current status of a daemon set.
                  properties:
                    collisionCount:
                      description: |-
                        Count of hash collisions for the DaemonSet. The DaemonSet controller
                        uses this field as a collision avoidance mechanism when it needs to
                        create the name for the newest ControllerRevision.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of a DaemonSet's current state.
                      items:
                        description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from one status to another.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False, Unknown.
                            type: string
                          type:
                            description: Type of DaemonSet condition.
                            type: string
                        required:
                          - status
                          - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    currentNumberScheduled:
                      description: |-
                        The number of nodes that are running at least 1
                        daemon pod and are supposed to run the daemon pod.
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    desiredNumberScheduled:
                      description: |-
                        The total number of nodes that should be running the daemon
                        pod (including nodes correctly running the daemon pod).
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    numberAvailable:
                      description: |-
                        The number of nodes that should be running the
                        daemon pod and have one or more of the daemon pod running and
                        available (ready for at least spec.minReadySeconds)
                      format: int32
                      type: integer
                    numberMisscheduled:
                      description: |-
                        The number of nodes that are running the daemon pod, but are
                        not supposed to run the daemon pod.
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    numberReady:
                      description: |-
                        numberReady is the number of nodes that should be running the daemon pod and have one
                        or more of the daemon pod running with a Ready Condition.
                      format: int32
                      type: integer
                    numberUnavailable:
                      description: |-
                        The number of nodes that should be running the
                        daemon pod and have none of the daemon pod running and available
                        (ready for at least spec.minReadySeconds)
                      format: int32
                      type: integer
                    observedGeneration:
                      description: The most recent generation observed by the daemon set controller.
                      format: int64
                      type: integer
                    updatedNumberScheduled:
                      description: The total number of nodes that are running updated daemon pod
                      format: int32
                      type: integer
                  required:
                    - currentNumberScheduled
                    - desiredNumberScheduled
                    - numberMisscheduled
                    - numberReady
                  type: object
                deploymentstatus:
                  description: DeploymentStatus is the most recently observed status of the Deployment.
                  properties:
                    availableReplicas:
                      description: Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
                      format: int32
                      type: integer
                    collisionCount:
                      description: |-
                        Count of hash collisions for the Deployment. The Deployment controller uses this
                        field as a collision avoidance mechanism when it needs to create the name for the
                        newest ReplicaSet.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of a deployment's current state.
                      items:
                        description: DeploymentCondition describes the state of a deployment at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from one status to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: The last time this condition was updated.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False, Unknown.
                            type: string
                          type:
                            description: Type of deployment condition.
                            type: string
                        required:
                          - status
                          - type
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    observedGeneration:
                      description: The generation observed by the deployment controller.
                      format: int64
                      type: integer
                    readyReplicas:
                      description: readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.
                      format: int32
                      type: integer
                    replicas:
                      description: Total number of non-terminated pods targeted by this deployment (their labels match the selector).
                      format: int32
                      type: integer
                    unavailableReplicas:
                      description: |-
                        Total number of unavailable pods targeted by this deployment. This is the total number of
                        pods that are still required for the deployment to have 100% available capacity. They may
                        either be pods that are running but not yet available or pods that still have not been created.
                      format: int32
                      type: integer
                    updatedReplicas:
                      description: Total number of non-terminated pods targeted by this deployment that have the desired template spec.
                      format: int32
                      type: integer
                  type: object
                servicestatuses:
                  additionalProperties:
                    description: ServiceStatus represents the current status of a service.
                    properties:
                      conditions:
                        description: Current service state
                        items:
                          description: Condition contains details for one aspect of the current state of this API Resource.
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: |-
                                observedGeneration represents the .metadata.generation that the condition was set based upon.
                                For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: |-
                                reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected values and meanings for this field,
                                and whether the values are considered a guaranteed API.
                                The value should be a CamelCase string.
                                This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      loadBalancer:
                        description: |-
                          LoadBalancer contains the current status of the load-balancer,
                          if one is present.
                        properties:
                          ingress:
                            description: |-
                              Ingress is a list containing ingress points for the load-balancer.
                              Traffic intended for the service should be sent to these ingress points.
                            items:
                              description: |-
                                LoadBalancerIngress represents the status of a load-balancer ingress point:
                                traffic intended for the service should be sent to an ingress point.
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is set for load-balancer ingress points that are DNS based
                                    (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: |-
                                    IP is set for load-balancer ingress points that are IP based
                                    (typically GCE or OpenStack load-balancers)
                                  type: string
                                ipMode:
                                  description: |-
                                    IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
                                    Setting this to "VIP" indicates that traffic is delivered to the node with
                                    the destination set to the load-balancer's IP and port.
                                    Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
                                    the destination set to the node's IP and node port or the pod's IP and port.
                                    Service implementations may use this information to adjust traffic routing.
                                  type: string
                                ports:
                                  description: |-
                                    Ports is a list of records of service ports
                                    If used, every port defined in the service should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: |-
                                          Error is to record the problem with the service port
                                          The format of the error shall comply with the following rules:
                                          - built-in error values shall be specified in this file and those shall use
                                            CamelCase names
                                          - cloud provider specific error values must have names that comply with the
                                            format foo.example.com/CamelCase.
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the service port of which status is recorded here
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: |-
                                          Protocol is the protocol of the service port of which status is recorded here
                                          The supported values are: "TCP", "UDP", "SCTP"
                                        type: string
                                    required:
                                      - error
                                      - port
                                      - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                    type: object
                  type: object
                status:
                  description: PipelineStatusKind enum.
                  type: string
              required:
                - status
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
{{- end }}
