suite: Test core instance
release:
  namespace: test
templates:
  - deployment.yaml

tests:
  - it: checks kind
    set:
      coreInstance: ci-1234
      cloudTokenSec:
        name: xxx
        key: yyy
    asserts:
      - isKind:
          of: Deployment
  - it: checks the setup
    set:
      name: test_core-instance
      cloudUrl: test_url
      coreInstance: ci-1234
      cloudTokenSec:
        name: xxx
        key: yyy
      calyptiaAnnotations: "test=1234,nope=4321"
      images:
        fromCloud:
          registry: custom.io
          repository: test/fromCloud
          tag: 1.2.3
        hotReload:
          registry: custom.io
          repository: test/hotreload
          tag: 1.2.3
        ingestCheck:
          registry: custom.io
          repository: test/ingestcheck
          tag: 1.2.3
      # Use alternative forms to verify backwards compatible
      httpProxy: https
      cloud_proxy: cloud
    asserts:
      # From Cloud
      - equal:
          path: metadata.name
          value: calyptia-core-instance-RELEASE-NAME
      - equal:
          path: metadata.namespace
          value: test
      - equal:
          path: spec.template.spec.containers[0].env[0]
          value:
            value: ci-1234
            name: CORE_INSTANCE
      - equal:
          path: spec.template.spec.containers[0].env[1]
          value:
            value: test
            name: NAMESPACE
      - equal:
          path: spec.template.spec.containers[0].env[2]
          value:
            value: test_url
            name: CLOUD_URL
      - equal:
          path: spec.template.spec.containers[0].env[3]
          value:
            valueFrom:
              secretKeyRef:
                key: yyy
                name: xxx
            name: TOKEN
      - equal:
          path: spec.template.spec.containers[0].env[4]
          value:
            value: 15s
            name: INTERVAL
      - equal:
          path: spec.template.spec.containers[0].env[5]
          value:
            value: "false"
            name: CLUSTER_LOGGING
      - equal:
          path: spec.template.spec.containers[0].env[6]
          value:
            value: "true"
            name: NO_TLS_VERIFY
      - equal:
          path: spec.template.spec.containers[0].env[7]
          value:
            value: custom.io/test/hotreload:1.2.3
            name: HOTRELOAD_IMAGE
      - equal:
          path: spec.template.spec.containers[0].image
          value: custom.io/test/fromCloud:1.2.3
      - equal:
          path: spec.template.spec.containers[0].env[7]
          value:
            value: "custom.io/test/hotreload:1.2.3"
            name: HOTRELOAD_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[8]
          value:
            value: "false"
            name: ENABLE_HEALTH_CHECK_PIPELINE
      - equal:
          path: spec.template.spec.containers[0].env[9]
          value:
            value: "2020"
            name: HEALTH_CHECK_PIPELINE_PORT
      - equal:
          path: spec.template.spec.containers[0].env[11]
          value:
            value: custom.io/test/ingestcheck:1.2.3
            name: INGEST_CHECK_IMAGE
      - equal:
          path: spec.template.spec.containers[0].env[12]
          value:
            value: test=1234,nope=4321
            name: ANNOTATIONS
      - equal:
          path: spec.template.spec.containers[0].env[15]
          value:
            value: https
            name: HTTP_PROXY
      - equal:
            path: spec.template.spec.containers[0].env[18]
            value:
              value: cloud
              name: CLOUD_PROXY
      - equal:
          path: spec.template.spec.containers[0].env[19]
          value:
            value: "5334"
            name: DEBUG_PORT
      - equal:
          path: spec.template.spec.containers[0].env[20]
          value:
            value: "0"
            name: CLOUD_TIMEOUT
      - equal:
          path: spec.template.spec.containers[0].livenessProbe
          value:
            httpGet:
              path: /healthz
              port: 5334
            initialDelaySeconds: 5
            periodSeconds: 5
      - equal:
          path: spec.template.spec.containers[0].readinessProbe
          value:
            httpGet:
              path: /readyz
              port: 5334
            initialDelaySeconds: 5
            periodSeconds: 5
      # To Cloud
      - equal:
          path: spec.template.spec.containers[1].env[0]
          value:
            value: ci-1234
            name: CORE_INSTANCE
      - equal:
          path: spec.template.spec.containers[1].env[1]
          value:
            value: test
            name: NAMESPACE
      - equal:
          path: spec.template.spec.containers[1].env[2]
          value:
            value: test_url
            name: CLOUD_URL
      - equal:
          path: spec.template.spec.containers[1].env[3]
          value:
            valueFrom:
              secretKeyRef:
                key: yyy
                name: xxx
            name: TOKEN
      - equal:
          path: spec.template.spec.containers[1].env[4]
          value:
            value: 15s
            name: INTERVAL
      - equal:
          path: spec.template.spec.containers[1].env[5]
          value:
            value: "true"
            name: NO_TLS_VERIFY
      - equal:
          path: spec.template.spec.containers[1].env[6]
          value:
            value: https
            name: HTTP_PROXY
      - equal:
          path: spec.template.spec.containers[1].env[10]
          value:
            value: "15334"
            name: DEBUG_PORT
      - equal:
          path: spec.template.spec.containers[1].env[11]
          value:
            value: "0"
            name: CLOUD_TIMEOUT
      - equal:
          path: spec.template.spec.containers[1].livenessProbe
          value:
            httpGet:
              path: /healthz
              port: 15334
            initialDelaySeconds: 5
            periodSeconds: 5
      - equal:
          path: spec.template.spec.containers[1].readinessProbe
          value:
            httpGet:
              path: /readyz
              port: 15334
            initialDelaySeconds: 5
            periodSeconds: 5
  - it: checks annotations
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaAnnotations: "test=1234,nope=test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[12]
          value:
            value: test=1234,nope=test
            name: ANNOTATIONS
  - it: checks annotations white space
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaAnnotations: "test=some three words,nope=two words"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[12]
          value:
            value: test=some three words,nope=two words
            name: ANNOTATIONS
  - it: checks annotations special char
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaAnnotations: "test=email@test.com,nope=two words"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[12]
          value:
            value: test=email@test.com,nope=two words
            name: ANNOTATIONS
  - it: checks annotations special char
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaAnnotations: "myspecial/annotation='this has spaces'"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[12]
          value:
            value: myspecial/annotation='this has spaces'
            name: ANNOTATIONS
  - it: checks tolerations key
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[0].key
          value: "key1"
  - it: checks tolerations effect
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[0].effect
          value: "Execute"
  - it: checks tolerations operator
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[0].operator
          value: "Equal"
  - it: checks tolerations tolerationSeconds
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[0].tolerationSeconds
          value: 3600
  - it: checks tolerations key
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600,key2=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[1].key
          value: "key2"
  - it: checks tolerations effect
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600,key2=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[1].effect
          value: "Execute"
  - it: checks tolerations operator
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600,key2=Equal:value1:Execute:3600"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[1].operator
          value: "Equal"
  - it: checks tolerations tolerationSeconds
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      calyptiaTolerations: "key1=Equal:value1:Execute:3600,key2=Equal:value1:Execute:3605"
    asserts:
      - equal:
          path: spec.template.spec.tolerations[1].tolerationSeconds
          value: 3605
  - it: sets cloud timeout
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      cloudTimeout: 15s
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[20]
          value:
            value: "15s"
            name: CLOUD_TIMEOUT
      - equal:
          path: spec.template.spec.containers[1].env[11]
          value:
            value: "15s"
            name: CLOUD_TIMEOUT
  - it: sets debug ports
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      fromCloud:
        debugPort: 1234
      toCloud:
        debugPort: 5678
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[19]
          value:
            value: "1234"
            name: DEBUG_PORT
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 1234
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 1234
      - equal:
          path: spec.template.spec.containers[1].env[10]
          value:
            value: "5678"
            name: DEBUG_PORT
      - equal:
          path: spec.template.spec.containers[1].livenessProbe.httpGet.port
          value: 5678
      - equal:
          path: spec.template.spec.containers[1].readinessProbe.httpGet.port
          value: 5678
  - it: sets probeIntervalSec
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      probeIntervalSec: 3
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.periodSeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[1].livenessProbe.initialDelaySeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[1].livenessProbe.periodSeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[1].readinessProbe.initialDelaySeconds
          value: 3
      - equal:
          path: spec.template.spec.containers[1].readinessProbe.periodSeconds
          value: 3
  - it: disables probeIntervalSec
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      probeIntervalSec: 0
    asserts:
      - notExists:
          path: spec.template.spec.containers[0].livenessProbe
      - notExists:
          path: spec.template.spec.containers[0].readinessProbe
      - notExists:
          path: spec.template.spec.containers[1].livenessProbe
      - notExists:
          path: spec.template.spec.containers[1].readinessProbe
  - it: sets legacy metrics
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      metrics: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 5334
              name: debug
      - equal:
          path: spec.template.spec.containers[1].ports
          value:
            - containerPort: 15334
              name: metrics
  - it: sets legacy metricsPort
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      metrics: true
      metricsPort: 1234
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports
          value:
            - containerPort: 5334
              name: debug
      - equal:
          path: spec.template.spec.containers[1].ports
          value:
            - containerPort: 1234
              name: metrics
  - it: sets common annotations
    set:
      coreInstance: ci-1234
      cloudToken: xxx
      commonAnnotations:
        foo: bar
        zed: zen
    asserts:
      - equal:
          path: metadata.annotations
          value:
            foo: bar
            zed: zen
      - equal:
          path: spec.template.metadata.annotations
          value:
            foo: bar
            kubectl.kubernetes.io/default-container: from-cloud
            zed: zen
