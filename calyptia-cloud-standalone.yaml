---
# Source: calyptia-standalone/charts/core-operator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-cloud-standalone-core-operator-calyptia-core-operator
  namespace: "calyptia"
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calyptia-cloud-standalone-monitoring-aggregator
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: calyptia-cloud-standalone-monitoring-daemonset
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: calyptia-standalone/templates/cloud/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
  name: calyptia-cloud-standalone-calyptia-standalone-cloud
  namespace: "calyptia"
---
# Source: calyptia-standalone/templates/frontend/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
  name: calyptia-cloud-standalone-calyptia-standalone-frontend
  namespace: "calyptia"
---
# Source: calyptia-standalone/templates/monitoring/configmap-daemonset.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: monitoring
  name: monitoring-daemonset
  namespace: "calyptia"
data:
    fluent-bit.conf: |-
        [SERVICE]
            Daemon              Off
            Flush               1
            Log_Level           info
            Parsers_File        /fluent-bit/etc/parsers.conf
            Parsers_File        /fluent-bit/etc/conf/custom_parsers.conf
            HTTP_Server         On
            HTTP_Listen         0.0.0.0
            HTTP_Port           2020
            Health_Check        On
            Storage.Metrics     On

        [INPUT]
            Name                tail
            Path                /var/log/containers/*.log
            multiline.parser    docker, cri
            Tag                 kube.*
            Mem_Buf_Limit       5MB
            Skip_Long_Lines     On
            Skip_Empty_Lines    On
            # Ensure we do not tail our own logs otherwise it can snowball even with exclusion later
            Exclude_Path        /var/log/containers/*${POD_NAME}*.log
            Path_Key            filename

        [INPUT]
            Name                systemd
            Tag                 host.*
            Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
            Read_From_Tail      On

        [INPUT]
            name                fluentbit_metrics
            tag                 metrics.calyptia
            scrape_on_start     true
            scrape_interval     30

        [INPUT]
            name                node_exporter_metrics
            tag                 metrics.node
            scrape_interval     30
            # Ensure these are mounted
            path.procfs         /host/proc
            path.sysfs          /host/sys

        [FILTER]
            Name                kubernetes
            Match               kube.*
            Merge_Log           On
            Keep_Log            Off
            K8S-Logging.Parser  On
            K8S-Logging.Exclude On

        [OUTPUT]
            name                stdout
            match               *

        [OUTPUT]
            name                prometheus_exporter
            match               metrics.*
            host                0.0.0.0
            port                2021
            add_label           node ${NODE_NAME}

        # The following may not be present
        [OUTPUT]
            name                forward
            host                vivo
            port                9000
            match               *
---
# Source: calyptia-standalone/templates/monitoring/configmap-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: monitoring
  name: monitoring-aggregator
  namespace: "calyptia"
data:
    fluent-bit.conf: |-
        [SERVICE]
            Daemon              Off
            Flush               1
            Log_Level           info
            Parsers_File        /fluent-bit/etc/parsers.conf
            Parsers_File        /fluent-bit/etc/conf/custom_parsers.conf
            HTTP_Server         On
            HTTP_Listen         0.0.0.0
            HTTP_Port           2020
            Health_Check        On
            Storage.Metrics     On

        [INPUT]
            name                fluentbit_metrics
            tag                 metrics.calyptia
            scrape_on_start     true
            scrape_interval     30

        # These will give us duplicate metrics for each image run from the daemonset
        [INPUT]
            name                prometheus_scrape
            tag                 metrics.cloud-api
            host                cloud-api.calyptia
            port                5000
            metrics_path        /prometheus_metrics
            scrape_interval     30s

        [INPUT]
            name                prometheus_scrape
            tag                 metrics.vivo
            host                vivo.calyptia
            port                2020
            metrics_path        /api/v2/metrics/prometheus
            scrape_interval     30s

        [INPUT]
            name                prometheus_scrape
            tag                 metrics.operator
            host                calyptia-core-controller-manager-metrics-service.calyptia
            port                8443
            metrics_path        /metrics
            scrape_interval     30s

        [OUTPUT]
            name                prometheus_exporter
            match               metrics.*
            host                0.0.0.0
            port                2021

        # The following may not be present
        [OUTPUT]
            name                forward
            host                vivo
            port                9000
            match               *
---
# Source: calyptia-standalone/charts/core-crd/templates/ingest_checks.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    calyptia.core: core-operator
  name: ingestchecks.core.calyptia.com
spec:
  group: core.calyptia.com
  names:
    kind: IngestCheck
    listKind: IngestCheckList
    plural: ingestchecks
    singular: ingestcheck
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Status of the ingest check
          jsonPath: .status.status
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: IngestCheck is the Schema for the ingestchecks API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IngestCheckSpec defines the desired state of IngestCheck
              properties:
                activeDeadlineSeconds:
                  default: 60
                  description: |-
                    Specifies the duration in seconds relative to the startTime that the job
                    may be continuously active before the system tries to terminate it; value
                    must be positive integer.
                  format: int64
                  type: integer
                cloudResourceID:
                  description: CloudResourceID represents the ID under which ingestcheck exists in Cloud API
                  type: string
                collectLogs:
                  default: false
                  type: boolean
                config:
                  type: string
                fluentBitImage:
                  default: 'ghcr.io/calyptia/core/calyptia-fluent-bit:24.3.1'
                  type: string
                ingestCheckSidecarImage:
                  default: 'ghcr.io/calyptia/core/ingest-check:0.0.7'
                  type: string
                retries:
                  default: 1
                  format: int32
                  type: integer
              required:
                - config
              type: object
            status:
              description: IngestCheckStatus defines the observed state of IngestCheck
              properties:
                logs:
                  additionalProperties:
                    type: string
                  type: object
                status:
                  default: NEW
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: calyptia-standalone/charts/core-crd/templates/pipelines.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    calyptia.core: core-operator
  name: pipelines.core.calyptia.com
spec:
  group: core.calyptia.com
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Status of the pipeline
          jsonPath: .status.status
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Pipeline is the Schema for the pipelines API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PipelineSpec defines the desired state of Pipeline
              properties:
                cloudResourceID:
                  description: CloudResourceID represents the ID under which pipeline exists in Cloud API
                  type: string
                envVar:
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: |-
                          Variable references $(VAR_NAME) are expanded
                          using the previously defined environment variables in the container and
                          any service environment variables. If a variable cannot be resolved,
                          the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of whether the variable
                          exists or not.
                          Defaults to "".
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                          fieldRef:
                            description: |-
                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceFieldRef:
                            description: |-
                              Selects a resource of the container: only resources limits and requests
                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                fluentbit:
                  properties:
                    config:
                      type: string
                    files:
                      items:
                        properties:
                          content:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                    parsers:
                      type: string
                    secrets:
                      items:
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                  type: object
                hotReload:
                  type: boolean
                hotReloadImage:
                  default: 'ghcr.io/calyptia/configmap-reload:0.11.1'
                  type: string
                image:
                  default: 'ghcr.io/calyptia/core/calyptia-fluent-bit:24.3.1'
                  type: string
                kind:
                  description: Enums
                  type: string
                ports:
                  items:
                    properties:
                      backendPort:
                        type: integer
                      cloudResourceID:
                        description: CloudResourceID represents the ID under which pipeline port exists in Cloud API
                        type: string
                      frontendPort:
                        type: integer
                      port:
                        format: int32
                        type: integer
                      protocol:
                        type: string
                      serviceType:
                        default: 'LoadBalancer'
                        description: Service Type string describes ingress methods for a service
                        type: string
                    type: object
                  type: array
                replicasCount:
                  format: int32
                  type: integer
                resources:
                  description: ResourceProfile model.
                  properties:
                    limits:
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                      type: object
                    requests:
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                        storage:
                          properties:
                            backlog-mem-limit:
                              type: string
                            max-chunks-pause:
                              type: boolean
                            max-chunks-up:
                              type: integer
                            sync-full:
                              type: boolean
                            volume-size:
                              default: 256Mi
                              type: string
                          type: object
                      type: object
                  type: object
              required:
                - kind
                - replicasCount
              type: object
            status:
              description: PipelineStatus defines the observed state of Pipeline
              properties:
                daemonsetstatus:
                  description: DaemonSetStatus represents the current status of a daemon set.
                  properties:
                    collisionCount:
                      description: |-
                        Count of hash collisions for the DaemonSet. The DaemonSet controller
                        uses this field as a collision avoidance mechanism when it needs to
                        create the name for the newest ControllerRevision.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of a DaemonSet's current state.
                      items:
                        description: DaemonSetCondition describes the state of a DaemonSet at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from one status to another.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False, Unknown.
                            type: string
                          type:
                            description: Type of DaemonSet condition.
                            type: string
                        required:
                          - status
                          - type
                        type: object
                      type: array
                    currentNumberScheduled:
                      description: |-
                        The number of nodes that are running at least 1
                        daemon pod and are supposed to run the daemon pod.
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    desiredNumberScheduled:
                      description: |-
                        The total number of nodes that should be running the daemon
                        pod (including nodes correctly running the daemon pod).
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    numberAvailable:
                      description: |-
                        The number of nodes that should be running the
                        daemon pod and have one or more of the daemon pod running and
                        available (ready for at least spec.minReadySeconds)
                      format: int32
                      type: integer
                    numberMisscheduled:
                      description: |-
                        The number of nodes that are running the daemon pod, but are
                        not supposed to run the daemon pod.
                        More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
                      format: int32
                      type: integer
                    numberReady:
                      description: |-
                        numberReady is the number of nodes that should be running the daemon pod and have one
                        or more of the daemon pod running with a Ready Condition.
                      format: int32
                      type: integer
                    numberUnavailable:
                      description: |-
                        The number of nodes that should be running the
                        daemon pod and have none of the daemon pod running and available
                        (ready for at least spec.minReadySeconds)
                      format: int32
                      type: integer
                    observedGeneration:
                      description: The most recent generation observed by the daemon set controller.
                      format: int64
                      type: integer
                    updatedNumberScheduled:
                      description: The total number of nodes that are running updated daemon pod
                      format: int32
                      type: integer
                  required:
                    - currentNumberScheduled
                    - desiredNumberScheduled
                    - numberMisscheduled
                    - numberReady
                  type: object
                deploymentstatus:
                  description: DeploymentStatus is the most recently observed status of the Deployment.
                  properties:
                    availableReplicas:
                      description: Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
                      format: int32
                      type: integer
                    collisionCount:
                      description: |-
                        Count of hash collisions for the Deployment. The Deployment controller uses this
                        field as a collision avoidance mechanism when it needs to create the name for the
                        newest ReplicaSet.
                      format: int32
                      type: integer
                    conditions:
                      description: Represents the latest available observations of a deployment's current state.
                      items:
                        description: DeploymentCondition describes the state of a deployment at a certain point.
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from one status to another.
                            format: date-time
                            type: string
                          lastUpdateTime:
                            description: The last time this condition was updated.
                            format: date-time
                            type: string
                          message:
                            description: A human readable message indicating details about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False, Unknown.
                            type: string
                          type:
                            description: Type of deployment condition.
                            type: string
                        required:
                          - status
                          - type
                        type: object
                      type: array
                    observedGeneration:
                      description: The generation observed by the deployment controller.
                      format: int64
                      type: integer
                    readyReplicas:
                      description: readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.
                      format: int32
                      type: integer
                    replicas:
                      description: Total number of non-terminated pods targeted by this deployment (their labels match the selector).
                      format: int32
                      type: integer
                    unavailableReplicas:
                      description: |-
                        Total number of unavailable pods targeted by this deployment. This is the total number of
                        pods that are still required for the deployment to have 100% available capacity. They may
                        either be pods that are running but not yet available or pods that still have not been created.
                      format: int32
                      type: integer
                    updatedReplicas:
                      description: Total number of non-terminated pods targeted by this deployment that have the desired template spec.
                      format: int32
                      type: integer
                  type: object
                servicestatuses:
                  additionalProperties:
                    description: ServiceStatus represents the current status of a service.
                    properties:
                      conditions:
                        description: Current service state
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}"
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: |-
                                observedGeneration represents the .metadata.generation that the condition was set based upon.
                                For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: |-
                                reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected values and meanings for this field,
                                and whether the values are considered a guaranteed API.
                                The value should be a CamelCase string.
                                This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: |-
                                type of condition in CamelCase or in foo.example.com/CamelCase.
                                ---
                                Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                                useful (see .node.status.conditions), the ability to deconflict is important.
                                The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      loadBalancer:
                        description: |-
                          LoadBalancer contains the current status of the load-balancer,
                          if one is present.
                        properties:
                          ingress:
                            description: |-
                              Ingress is a list containing ingress points for the load-balancer.
                              Traffic intended for the service should be sent to these ingress points.
                            items:
                              description: |-
                                LoadBalancerIngress represents the status of a load-balancer ingress point:
                                traffic intended for the service should be sent to an ingress point.
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is set for load-balancer ingress points that are DNS based
                                    (typically AWS load-balancers)
                                  type: string
                                ip:
                                  description: |-
                                    IP is set for load-balancer ingress points that are IP based
                                    (typically GCE or OpenStack load-balancers)
                                  type: string
                                ipMode:
                                  description: |-
                                    IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
                                    Setting this to "VIP" indicates that traffic is delivered to the node with
                                    the destination set to the load-balancer's IP and port.
                                    Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
                                    the destination set to the node's IP and node port or the pod's IP and port.
                                    Service implementations may use this information to adjust traffic routing.
                                  type: string
                                ports:
                                  description: |-
                                    Ports is a list of records of service ports
                                    If used, every port defined in the service should have an entry in it
                                  items:
                                    properties:
                                      error:
                                        description: |-
                                          Error is to record the problem with the service port
                                          The format of the error shall comply with the following rules:
                                          - built-in error values shall be specified in this file and those shall use
                                            CamelCase names
                                          - cloud provider specific error values must have names that comply with the
                                            format foo.example.com/CamelCase.
                                          ---
                                          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                        maxLength: 316
                                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                        type: string
                                      port:
                                        description: Port is the port number of the service port of which status is recorded here
                                        format: int32
                                        type: integer
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol is the protocol of the service port of which status is recorded here
                                          The supported values are: "TCP", "UDP", "SCTP"
                                        type: string
                                    required:
                                      - port
                                      - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            type: array
                        type: object
                    type: object
                  type: object
                status:
                  description: PipelineStatusKind enum.
                  type: string
              required:
                - status
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: calyptia-standalone/charts/core-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    calyptia.core: core-operator
  name: calyptia-core-manager-role
rules:
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - core.calyptia.com
      - core
      - rbac.authorization.k8s.io
      - security.openshift.io
    resources:
      - events
      - namespaces
      - serviceaccounts
      - deployments
      - clusterrolebindings
      - daemonsets
      - replicasets
      - pods
      - pods/log
      - services
      - configmaps
      - deployments/scale
      - secrets
      - nodes/proxy
      - nodes
      - jobs
      - podsecuritypolicies
      - ingestchecks
      - ingestchecks/finalizers
      - ingestchecks/status
      - pipelines
      - pipelines/finalizers
      - pipelines/status
      - securitycontextconstraints
    verbs:
      - get
      - list
      - create
      - delete
      - patch
      - update
      - watch
      - deletecollection
      - use
---
# Source: calyptia-standalone/charts/core-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: calyptia-standalone/charts/core-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    calyptia.core: core-operator
  name: calyptia-core-pod-role
rules:
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - core.calyptia.com
    resources:
      - events
      - namespaces
      - deployments
      - daemonsets
      - replicasets
      - pods
      - pods/log
      - services
      - configmaps
      - deployments/scale
      - secrets
      - nodes/proxy
      - nodes
      - jobs
      - podsecuritypolicies
      - pipelines
      - pipelines/finalizers
      - pipelines/status
    verbs:
      - get
      - list
      - create
      - delete
      - patch
      - update
      - watch
      - deletecollection
      - use
---
# Source: calyptia-standalone/charts/core-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: calyptia-cloud-standalone-monitoring-aggregator
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: calyptia-cloud-standalone-monitoring-daemonset
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: calyptia-standalone/charts/core-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-core-manager-role
subjects:
- kind: ServiceAccount
  name: calyptia-cloud-standalone-core-operator-calyptia-core-operator
  namespace: calyptia
---
# Source: calyptia-standalone/charts/core-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
  name: calyptia-core-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-core-proxy-role
subjects:
- kind: ServiceAccount
  name: calyptia-cloud-standalone-core-operator-calyptia-core-operator
  namespace: calyptia
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calyptia-cloud-standalone-monitoring-aggregator
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-cloud-standalone-monitoring-aggregator
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-monitoring-aggregator
    namespace: calyptia
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: calyptia-cloud-standalone-monitoring-daemonset
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: calyptia-cloud-standalone-monitoring-daemonset
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-monitoring-daemonset
    namespace: calyptia
---
# Source: calyptia-standalone/templates/cloud/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: calyptia-write-role
  namespace: "calyptia"
rules:
  - apiGroups: [""] # core API group
    resources: ["pods", "secrets"]
    verbs: ["get", "watch", "list", "create", "update", "delete"]
---
# Source: calyptia-standalone/templates/frontend/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: calyptia-read-role
  namespace: "calyptia"
rules:
  - apiGroups: [""] # core API group
    resources: ["pods", "secrets"]
    verbs: ["get", "watch", "list"]
---
# Source: calyptia-standalone/templates/cloud/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: calyptia-write-binding
  namespace: "calyptia"
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-calyptia-standalone-cloud
    namespace: "calyptia"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: calyptia-write-role
---
# Source: calyptia-standalone/templates/frontend/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: calyptia-read-binding
  namespace: "calyptia"
subjects:
  - kind: ServiceAccount
    name: calyptia-cloud-standalone-calyptia-standalone-frontend
    namespace: "calyptia"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: calyptia-read-role
---
# Source: calyptia-standalone/charts/core-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: http
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: operator
    calyptia.core: core-operator
    control-plane: controller-manager
  name: calyptia-core-controller-manager-metrics-service
  namespace: calyptia
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  - name: http
    port: 8081
    protocol: TCP
    targetPort: http
  selector:
    calyptia.core: core-operator
    control-plane: controller-manager
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: calyptia-cloud-standalone-monitoring-aggregator
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    metrics.dynatrace.com/path: /metrics
    metrics.dynatrace.com/port: "2021"
    metrics.dynatrace.com/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "2021"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: http
      protocol: TCP
      name: http
    - name: metrics
      targetPort: metrics
      protocol: TCP
      port: 2021
  selector:
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: calyptia-cloud-standalone-monitoring-daemonset
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: http
      protocol: TCP
      name: http
    - name: metrics
      targetPort: metrics
      protocol: TCP
      port: 2021
  selector:
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
---
# Source: calyptia-standalone/templates/cloud/service-cloud.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/prometheus_metrics"
    prometheus.io/port: "5000"
    # Set up Dynatrace scraping
    metrics.dynatrace.com/scrape: "true"
    metrics.dynatrace.com/path: "/prometheus_metrics"
    metrics.dynatrace.com/port: "5000"
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-api
  name: cloud-api
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: "cloud-api"
      port: 5000
      targetPort: 5000
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-api
---
# Source: calyptia-standalone/templates/cloud/service-influxdb.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: influxdb
  name: influxdb
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: influxdb
      port: 8086
      targetPort: 8086
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: influxdb
---
# Source: calyptia-standalone/templates/cloud/service-postgres.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: postgres
  name: postgres
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: postgres
---
# Source: calyptia-standalone/templates/frontend/service-core-ui.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: core
  name: core
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: ui
      port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: core
---
# Source: calyptia-standalone/templates/frontend/service-luasandbox.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-lua-sandbox
  name: cloud-lua-sandbox
  namespace: "calyptia"
spec:
  type: ClusterIP
  ports:
    - name: cloud-lua-sandbox
      port: 5555
      targetPort: 5555
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-lua-sandbox
---
# Source: calyptia-standalone/templates/vivo/service-vivo.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/api/v2/metrics/prometheus"
    prometheus.io/port: '2020'
    # Set up Dynatrace scraping
    metrics.dynatrace.com/scrape: "true"
    metrics.dynatrace.com/path: "/api/v2/metrics/prometheus"
    metrics.dynatrace.com/port: '2020'
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: vivo
    calyptia.vivo.input.http: '9010'
    calyptia.vivo.input.forward: '9000'
  name: vivo
  namespace: "calyptia"
spec:
  type: LoadBalancer
  ports:
    - name: "ui"
      port: 3000
      targetPort: 3000
    - name: "forward"
      port: 9000
      targetPort: 24224
    - name: "http"
      port: 9010
      targetPort: 9880
    - name: "vivo"
      port: 2025
      targetPort: 2025
    - name: "fluent-bit"
      port: 2020
      targetPort: 2020
  selector:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: vivo
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: calyptia-cloud-standalone-monitoring-daemonset
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/name: monitoring-daemonset
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: monitoring-daemonset
      app.kubernetes.io/instance: calyptia-cloud-standalone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: monitoring-daemonset
        app.kubernetes.io/instance: calyptia-cloud-standalone
      annotations:
        checksum/config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        fluentbit.io/exclude: "true"
        metrics.dynatrace.com/path: /metrics
        metrics.dynatrace.com/port: "2021"
        metrics.dynatrace.com/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "2021"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: calyptia-cloud-standalone-monitoring-daemonset
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - name: monitoring-daemonset
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          image: "ghcr.io/calyptia/core/calyptia-fluent-bit:24.3.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - --workdir=/fluent-bit/etc
            - --config=/fluent-bit/etc/conf/fluent-bit.conf
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
            - name: metrics
              containerPort: 2021
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc/conf
            - mountPath: /var/log/
              name: varlog
              readOnly: true
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /etc/machine-id
              name: etcmachineid
              readOnly: true
            - mountPath: /host/proc
              name: hostproc
              readOnly: true
            - mountPath: /host/sys
              name: hostsys
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: monitoring-daemonset
        - hostPath:
            path: /var/log/
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - hostPath:
            path: /etc/machine-id
            type: File
          name: etcmachineid
        - hostPath:
            path: /proc
          name: hostproc
        - hostPath:
            path: /sys
          name: hostsys
---
# Source: calyptia-standalone/charts/core-operator/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  #
    app.kubernetes.io/name: core-operator
    helm.sh/chart: core-operator-2.8.0
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v2.8.0"
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: operator
    calyptia.core: core-operator
    control-plane: controller-manager
  name: calyptia-core-controller-manager
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      calyptia.core: core-operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
      #
        app.kubernetes.io/name: core-operator
        helm.sh/chart: core-operator-2.8.0
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v2.8.0"
      #
      #
        calyptia.core: core-operator
        control-plane: controller-manager
    spec:
      containers:
        - command:
            - /manager
          image: ghcr.io/calyptia/core-operator:2.8.0
          imagePullPolicy: "IfNotPresent"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 8443
              name: https
            - containerPort: 8081
              name: http
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccount: calyptia-cloud-standalone-core-operator-calyptia-core-operator
      
      imagePullSecrets:
        - name: regcreds
      terminationGracePeriodSeconds: 10
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calyptia-cloud-standalone-monitoring-aggregator
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/name: monitoring-aggregator
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: monitoring-aggregator
      app.kubernetes.io/instance: calyptia-cloud-standalone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: monitoring-aggregator
        app.kubernetes.io/instance: calyptia-cloud-standalone
      annotations:
        checksum/config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: calyptia-cloud-standalone-monitoring-aggregator
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - name: monitoring-aggregator
          image: "ghcr.io/calyptia/core/calyptia-fluent-bit:24.3.1"
          imagePullPolicy: IfNotPresent
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - --workdir=/fluent-bit/etc
            - --config=/fluent-bit/etc/conf/fluent-bit.conf
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
            - name: metrics
              containerPort: 2021
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc/conf
      volumes:
        - name: config
          configMap:
            name: monitoring-aggregator
---
# Source: calyptia-standalone/templates/cloud/deployment-cloud.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/default-container: cloud-api
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-api
  name: cloud-api
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: cloud-api
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: cloud-api
    spec:
      serviceAccount: calyptia-cloud-standalone-calyptia-standalone-cloud
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: ghcr.io/chronosphereio/calyptia-cloud:1.8.0
          imagePullPolicy: "IfNotPresent"
          name: cloud-api
          ports:
            - name: http
              containerPort: 5000
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          env:
            - name: DEBUG
              value: 'true'
            - name: INFLUX_SERVER
              value: "http://influxdb:8086"
            - name: POSTGRES_DSN
              value: "postgresql://postgres@postgres:5432?sslmode=disable"
            # - name: ALLOWED_ORIGINS
            #   # value: "https://config-viewer-ui-dev.herokuapp.com,https://visual-ui.herokuapp.com,https://cloud-api.calyptia.com,https://core-jet.vercel.app,https://core-git-*-calyptia.vercel.app"
            #   value: "*"
            # To enable secret export we have to specify a token file but we do not want to expose this
            - name: DEFAULT_TOKEN_FILE
              value: /dev/null
            - name: DEFAULT_TOKEN_K8S_SECRET_NAME
              value: auth-secret
            - name: DEFAULT_TOKEN_K8S_SECRET_NAMESPACE
              value: "calyptia"
          volumeMounts:
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            periodSeconds: 60
          livenessProbe:
            failureThreshold: 7
            httpGet:
              path: /
              port: http
            periodSeconds: 60
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/cloud/deployment-influxdb.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: influxdb
  name: influxdb
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: influxdb
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: influxdb
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: cloud-api
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              value: my-password
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: my-user
          image: docker.io/influxdb:2.7.1
          imagePullPolicy: "IfNotPresent"
          name: influxdb
          ports:
            - containerPort: 8086
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/cloud/deployment-postgres.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: postgres
  name: postgres
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: postgres
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: postgres
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          image: docker.io/postgres:15.3
          imagePullPolicy: "IfNotPresent"
          name: postgres
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/frontend/deployment-core-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: core
  name: core
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: core
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: core
    spec:
      serviceAccount: calyptia-cloud-standalone-calyptia-standalone-frontend
      
      imagePullSecrets:
        - name: regcreds
      initContainers:
        # Wait for the auth-secret to be created before continuing
        - name: token-secret-waiter
          image: docker.io/bitnami/kubectl:1.25.12
          imagePullPolicy: "IfNotPresent"
          resources:
            limits: {}
            requests: {}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              until kubectl get secret -n "${DEFAULT_TOKEN_K8S_SECRET_NAMESPACE}" "${DEFAULT_TOKEN_K8S_SECRET_NAME}"; do
                sleep 10
              done
              kubectl get secret -n "${DEFAULT_TOKEN_K8S_SECRET_NAMESPACE}" "${DEFAULT_TOKEN_K8S_SECRET_NAME}" -o yaml
          env:
            - name: DEFAULT_TOKEN_K8S_SECRET_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DEFAULT_TOKEN_K8S_SECRET_NAME
              value: auth-secret
      containers:
        - image: ghcr.io/chronosphereio/calyptia-frontend:1.12.0
          imagePullPolicy: "IfNotPresent"
          name: core
          ports:
            - name: http
              containerPort: 3000
          env:
            # The in-cluster 'cloud' service
            - name: CLOUD_API_URL
              value: http://cloud-api:5000
            - name: NEXT_PUBLIC_CLI_INSTRUCTIONS_URL_OVERRIDE
              value: http://cloud-api:5000
              # The in-cluster LUA sandbox service
            - name: LUA_SANDBOX_URL
              value: http://cloud-lua-sandbox:5555/jsonrpc
            # Disable various components we do not want - the container should anyway.
            - name: SENTRY_IGNORE_API_RESOLUTION_ERROR
              value: '1'
            - name: SENTRY_ENVIRONMENT
              value: 'offline'
            - name: SENTRY_DISABLED
              value: '1'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            # Extract the value for this from the secret specified
            - name: ONPREM_CLOUD_API_PROJECT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: auth-secret
                  # Fixed name generated by Cloud since >=1.6.8
                  key: token
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          volumeMounts:
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: http
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: http
            periodSeconds: 60
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /
              port: http
            periodSeconds: 60
      volumes:
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/frontend/deployment-luasandbox.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: cloud-lua-sandbox
  name: cloud-lua-sandbox
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: cloud-lua-sandbox
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: cloud-lua-sandbox
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: ghcr.io/calyptia/cloud-lua-sandbox:3.5.0
          name: cloud-lua-sandbox
          ports:
            - name: http
              containerPort: 5555
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests: {}
          imagePullPolicy: "IfNotPresent"
      restartPolicy: Always
---
# Source: calyptia-standalone/templates/vivo/deployment-vivo.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: calyptia-standalone
    helm.sh/chart: calyptia-standalone-2.8.1
    app.kubernetes.io/instance: calyptia-cloud-standalone
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "v1.8.0"
    app.kubernetes.io/component: vivo
  name: vivo
  namespace: "calyptia"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: calyptia-standalone
      app.kubernetes.io/instance: calyptia-cloud-standalone
      app.kubernetes.io/component: vivo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calyptia-standalone
        helm.sh/chart: calyptia-standalone-2.8.1
        app.kubernetes.io/instance: calyptia-cloud-standalone
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "v1.8.0"
        app.kubernetes.io/component: vivo
    spec:
      
      imagePullSecrets:
        - name: regcreds
      containers:
        - image: docker.io/calyptia/vivo:3.0.1
          name: vivo
          ports:
            - name: forward
              containerPort: 24224
            - name: http
              containerPort: 9880
            - name: vivo
              containerPort: 2025
            - name: fluent-bit
              containerPort: 2020
            - name: ui
              containerPort: 3000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: fluent-bit
            periodSeconds: 5
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/v1/health
              port: fluent-bit
            periodSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
          imagePullPolicy: "IfNotPresent"
      restartPolicy: Always
---
# Source: calyptia-standalone/charts/monitoring-aggregator/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "calyptia-cloud-standalone-monitoring-aggregator-test-connection"
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-aggregator-0.44.0
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  containers:
    - name: wget
      image: "busybox:latest"
      imagePullPolicy: Always
      command: ["sh"]
      args: ["-c", "wget -O- calyptia-cloud-standalone-monitoring-aggregator:2020"]
  restartPolicy: Never
---
# Source: calyptia-standalone/charts/monitoring-daemonset/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "calyptia-cloud-standalone-monitoring-daemonset-test-connection"
  namespace: calyptia
  labels:
    helm.sh/chart: monitoring-daemonset-0.44.0
    app.kubernetes.io/version: "2.2.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  containers:
    - name: wget
      image: "busybox:latest"
      imagePullPolicy: Always
      command: ["sh"]
      args: ["-c", "wget -O- calyptia-cloud-standalone-monitoring-daemonset:2020"]
  restartPolicy: Never
